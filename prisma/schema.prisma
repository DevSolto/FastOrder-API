// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               String              @id @default(uuid())
  cpf              String              @unique @db.Char(11)
  nome             String              @db.VarChar(50)
  email            String              @unique @db.VarChar(100)
  senha            String              @db.VarChar(100)
  telefones        Telefone_Usuarios[]
  data_Criacao     DateTime            @default(now())
  data_Modificacao DateTime            @updatedAt
  empresas         Empresa[]
  pedidos          Pedido[]
  Unidade          Unidade?            @relation(fields: [unidadeId], references: [id])
  unidadeId        String?
}

model Telefone_Usuarios {
  id     String @id @default(uuid())
  numero String @unique @db.VarChar(20)

  Usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId String?
}

model Telefone_Empresas {
  id     String @id @default(uuid())
  numero String @unique @db.VarChar(20)

  Empresa    Empresa? @relation(fields: [empresa_Id], references: [id])
  empresa_Id String?
}

model Empresa {
  id               String              @id @default(uuid())
  nome             String              @db.VarChar(50)
  cnpj             String              @unique @db.Char(18)
  descricao        String              @db.Text
  data_Criacao     DateTime            @default(now())
  data_Modificacao DateTime            @updatedAt
  email            String              @unique @db.VarChar(100)
  telefones        Telefone_Empresas[]
  gerentes         Usuario[]
  unidades         Unidade[]
}

model Pedido {
  id               String    @id @default(uuid())
  data_Criacao     DateTime  @default(now())
  data_Modificacao DateTime  @updatedAt
  previsao_Entrega DateTime?
  data_Entrega     DateTime?
  status           Status    @default(PENDENTE)
  observacao       String    @db.Text

  usuarioId String?
  Usuario   Usuario? @relation(fields: [usuarioId], references: [id])

  itens_Pedido Itens_Pedido[]

  unidadeFornecedoraId String?
  unidadeRecebedoraId  String?

  Fornecedor Unidade? @relation("FornecedorPedidos", fields: [unidadeFornecedoraId], references: [id])
  Recebedor  Unidade? @relation("RecebedorPedidos", fields: [unidadeRecebedoraId], references: [id])
}

model Unidade {
  id               String   @id @default(uuid())
  nome             String   @db.VarChar(50)
  descricao        String   @db.Text
  data_Criacao     DateTime @default(now())
  data_Modificacao DateTime @updatedAt
  tipo             Tipo
  enderecoId       String?
  empresaId        String?

  Endereco          Endereco?  @relation(fields: [enderecoId], references: [id])
  Empresa           Empresa?   @relation(fields: [empresaId], references: [id])
  Producao          Producao[]
  Venda             Venda[]
  funcionarios      Usuario[]
  FornecedorPedidos Pedido[]   @relation("FornecedorPedidos")
  RecebedorPedidos  Pedido[]   @relation("RecebedorPedidos")
}

model Endereco {
  id         String @id @default(uuid())
  cep        String @db.Char(9)
  pais       String @db.VarChar(50)
  uf         String @db.Char(2)
  cidade     String
  logradouro String @db.VarChar(100)
  numero     String @db.VarChar(50)
  Unidade    Unidade[]
}

model Produto {
  id               String         @id @default(uuid())
  nome             String         @db.VarChar(50)
  descricao        String         @db.Text
  data_Criacao     DateTime       @default(now())
  data_Modificacao DateTime       @updatedAt
  Categoria        Categoria?     @relation(fields: [categoria_Id], references: [id])
  categoria_Id     String?
  Itens_Pedido     Itens_Pedido[]
  Producao         Producao[]
  Venda            Venda[]
}

model Categoria {
  id               String    @id @default(uuid())
  nome             String    @db.VarChar(50)
  descricao        String    @db.Text
  data_Criacao     DateTime  @default(now())
  data_Modificacao DateTime  @updatedAt
  Produto          Produto[]
}

model Itens_Pedido {
  pedido           Pedido   @relation(fields: [pedido_Id], references: [id])
  pedido_Id        String
  produto          Produto  @relation(fields: [produto_Id], references: [id])
  produto_Id       String
  quantidade       Int
  data_Criacao     DateTime @default(now())
  data_Modificacao DateTime @updatedAt

  @@id([pedido_Id, produto_Id])
}

model Producao {
  unidade      Unidade  @relation(fields: [unidade_Id], references: [id])
  unidade_Id   String
  produto      Produto  @relation(fields: [produto_Id], references: [id])
  produto_Id   String
  data_Criacao DateTime @default(now())

  @@id([unidade_Id, produto_Id])
}

model Venda {
  unidade      Unidade  @relation(fields: [unidade_Id], references: [id])
  unidade_Id   String
  produto      Produto  @relation(fields: [produto_Id], references: [id])
  produto_Id   String
  data_Criacao DateTime @default(now())

  @@id([unidade_Id, produto_Id])
}

enum Status {
  PENDENTE
  ACEITO
  NEGADO
  PRODUCAO
  ENTREGA
  RECEBIDO
  FINALIZADO
}

enum Tipo {
  FORNECEDORA
  VENDEDORA
}
